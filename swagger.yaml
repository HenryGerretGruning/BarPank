openapi: 3.0.2
info:
  title: BarPank
  version: 1.0.0
  description: ''
paths:
  /users:
    summary: Path used to manage the list of users.
    description: >-
      The REST endpoint/path used to list and create zero or more `user` entities.  This path contains a
      `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `user` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      tags:
        - users
      responses:
        '201':
          description: Successful response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                parameter missing:
                  value:
                    error: >-
                      user validation failed: (?<parameterName>[^:]+): Path
                      (?<parameterNameAgain>[^]+) is required.(, ([^:]+): Path ([^]+) is
                      required.){0,2}
          description: Parameter missing
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                username already exists:
                  value:
                    error: Username already exists
          description: username already exists
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Parameter(s) value too short/long:
                  value: "{\r\n    \"error\": \"Path (?<parameterName>.+) ((?<sampleValue>.+)) is (longer|shorte) than the (maximum|minimum) allowed length ((?<requiredLength>\\d+))\"\r\n}"
          description: "Parameter(s) value too short/long\r\n"
      operationId: createuser
      summary: Create a user
      description: Creates a new instance of a `user`.
  /sessions:
    summary: Path used to manage the list of sessions.
    description: >-
      The REST endpoint/path used to list and create zero or more `session` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `session` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
            examples:
              POST /sessions request:
                value:
                  username: anna
                  password: qwerty1234
        required: true
      responses:
        '200':
          description: successful login
        '400':
          content:
            application/json:
              examples:
                Required parameter missing:
                  value:
                    error: Required parameter missing
          description: Required parameter missing
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                invalid credentials:
                  value:
                    error: invalid credentials
          description: Invalid Token
      operationId: createsession
      summary: Create a session
      description: Creates a new instance of a `session`.
    delete:
      responses:
        '204':
          description: Session successfully deleted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid authorisation format:
                  value:
                    error: Invalid authorisation format
          description: Invalid authorisation format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                invalid token:
                  value:
                    error: invalid token
          description: invalid token
      description: "Deletes given `session` with an id specified in authorization header\r\n"
components:
  schemas:
    user:
      title: Root Type for user
      description: ''
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
      example:
        username: miki
        password: plutoonium123
        name: Miki Hiir
    error:
      title: Root Type for error
      description: ''
      type: object
      properties:
        error:
          type: string
      example:
        error: some text
    session:
      title: Root Type for session
      description: ''
      type: object
      properties:
        token:
          type: string
      example:
        token: 6162ea8470ba6a0cc3cabdbd
tags:
  -
    name: users
    description: ''
